{"/":{"title":"vicente015.dev","content":"\n¡Hola mundo!\n\nEste es mi pequeño espacio en el [[thoughts/Internet|Internet]], un [[thoughts/Jardín digital|jardín digital]] donde puedo escribir y conectar ideas.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/tags/fruit/":{"title":"Fruit","content":"\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/tags/sapling/":{"title":"Sapling","content":"\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/tags/seed/":{"title":"Seed","content":"","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/1984":{"title":"1984","content":"\nEscrito por George Orwell.\n\nEs una novela que presenta un futuro distópico de [[thoughts/Vigilancia masiva]], manipulación de la información y nulas libertades civiles.\n\nDecidí leer este libro durante una época en la que estuve obsesionado con documentales y reportajes sobre Corea del Norte[^3], después de escuchar lo siguiente:\n\n\u003e Solo se necesitaron tres generaciones para convertir a Corea del Norte en el \"1984\" de George Orwell.\n\u003e\n\u003e -- [Yeonmi Park](https://es.wikipedia.org/wiki/Park_Yeon-mi), [TED Talk](https://youtu.be/mLzTo-y8Ef0?t=514)\n\n## Resumen\n\nLa novela presenta a Winston, el protagonista que trabaja falsificando documentos históricos como periódicos en el [Ministerio de la Verdad](https://es.wikipedia.org/wiki/Ministerio_de_la_Verdad).\n\nEn 1984 se describe una sociedad donde un ente llamado el [Gran Hermano](https://es.wikipedia.org/wiki/Big_Brother_(personaje)) lo controla y vigila todo, donde el gobierno tiene un control total sobre la información y los medios y puede manipular y llenar todo de propaganda sin problemas y donde el pensamiento libre está prohibido.\n\nWinston se va haciendo consciente de la gran farsa del gobierno y acaba odiando al [Gran Hermano](https://es.wikipedia.org/wiki/Big_Brother_(personaje)), la novela transcurre mientras Winston desarrolla estos pensamientos.\n\n## Reflexión\n\n### Vigilancia masiva\n\n1984 advierte sobre el mal uso de la vigilancia masiva e indiscriminada que podría ocurrir en el futuro.\nDefinitivamente ya estamos en un futuro donde la tecnología y los intereses de los gobiernos están en torno la vigilancia masiva, Edward Snowden informó de estas prácticas en 2013[^2].\n\n## Gran Hermano\n\n\n\n## Citas\n\n\u003e Hasta que no tengan conciencia de su fuerza, no se rebelarán, y hasta después de haberse rebelado, no serán conscientes. Éste es el problema.\n\n\u003e Pero por otra parte de su cerebro creía firmemente que cabía la posibilidad de construirse un mundo secreto donde vivir a gusto. Sólo se necesitaba suerte, astucia y audacia.\n\n[^1]: Fuente: [EFF](https://www.eff.org/issues/mass-surveillance-technologies)\n[^2]: Fuente: [Wikipedia](https://es.wikipedia.org/wiki/Datos_acerca_de_la_vigilancia_mundial_(2013_a_la_fecha))\n[^3]: Fuente: [Youtube](https://www.youtube.com/watch?v=9oLvnHLKeMY)\n[^4]: Fuente: [Youtube](https://www.youtube.com/watch?v=NAvfuRcWyvE)\n[^5]: Fuente: [Youtube](https://www.youtube.com/watch?v=PdxPCeWw75k)\n\n\n\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Algoritmo":{"title":"Algoritmos","content":"\nUn algoritmo es un conjunto de instrucciones que se deben de seguir para resolver un problema.\n\n## [Big O notation](https://en.wikipedia.org/wiki/Big_O_notation)\nLa Notación O grande se refiere a una función matemática que describe el límite del comportamiento de una función que tiende a infinito.\n\nEn informática se usa para representar los tiempos de ejecución o la complejidad que puede tener un algoritmo.\n\n## Algoritmos de búsqueda\nLa búsqueda es la forma en la resolvemos el problema de encontrar un valor particular en un [[thoughts/Array|conjunto de datos]].\n\n### Lineal search (`O(n)`)\nComprueba valor por valor sin saltar.\nLa complejidad depende de la cantidad de valores, siendo `n` la cantidad de valores.\n\n### Binary search (`O(log n)`)\nBusca en una lista ordenada un valor comprobando la posición actual con el esperado.\n\nEjemplo: buscamos `C` en `[A,B,C,D]`\n\n1. Compara `list[0]` con `C`, es pequeño -\u003e seguir buscando.\n2. Compara `list[3]` con `C`, es mayor -\u003e retrocede.\n3. Compara `list[2]` con `C`, ¡encontrado!\n\n### Selection sort (`O(n²)`)\nSe trata de ordenar un [[thoughts/Array|array]] buscando el valor más pequeño y colocando dicho valor en el primer puesto, una vez esté el primero, el segundo...\n\n### Bubble sort (`O(n²)`)\nComprueba los valores de izquierda a derecha de dos en dos comparando dichos números, si es menor lo moverá a la izquierda de lo contrario seguirá, se acabarán quedando los grandes a la derecha y los pequeños a la izquierda.\n\n### Merge sort (`O(n log n)`)\nDivide el array en dos mitades, de pequeño a más grande comparando con la otra mitad.\n\n## Recursividad\nLa recursividad es la capacidad de una función de llamarse a si misma.\n\n\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Array":{"title":"Array","content":"\nEn [[programación]] se denomica **vector, formación o matriz**, a una colección ordenada de datos. Desde el punto de vista lógico una matriz se puede ver como un conjunto de elementos ordenados en fila (o filas y columnas si tuviera dos dimensiones). [^1]\n\n![[thoughts/images/Pasted image 20230709183835.png]]\n\n\n[^1]: Fuente: https://es.wikipedia.org/wiki/Vector_(inform%C3%A1tica)","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Arte":{"title":"Arte","content":"\nEl arte es el resultado de plasmar o manifestar los sentimientos y emociones de una persona sobre algo.","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Cifrado-C%C3%A9sar":{"title":"Cifrado César","content":"\nEl cifrado césar es una de las técnicas de [[thoughts/Encriptación|encriptación]] más simples y usadas.\n\nConsiste en un cifrado por sustitución en el que una letra en el texto original es reemplazada por otra letra que se encuentra un número fijo de posiciones más adelante en el [alfabeto](https://es.m.wikipedia.org/wiki/Alfabeto \"Alfabeto\").\n\n![[thoughts/images/Pasted image 20230705131452.png]]\n\nEjemplo de cifrado César usando desplazamiento de seis caracteres hacia la derecha:\n```\nTexto original: ABCDEFGHIJKLMNÑOPQRSTUVWXYZ  \nTexto codificado: GHIJKLMNÑOPQRSTUVWXYZABCDEF\n```","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Creatividad":{"title":"Creatividad","content":"\n\u003e La creatividad viene de aplicar diferentes cosas que aprendes en otros campos al campo en el que trabajas.\n\u003e Si tienes un montón de proyectos diferentes, en diferentes campos entonces tendrás muchas ideas que puedes aplicar.\n\u003e\n\u003e -- Aaron Swartz, http://www.aaronsw.com/weblog/productivity\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Criptograf%C3%ADa":{"title":"Criptografía","content":"\n\u003e La criptografía es la práctica y el estudio de técnicas para una comunicación segura ante la presencia de un receptor no autorizado.","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Datos":{"title":"Datos","content":"\nLos datos son colecciones de información que están asociados a algo o alguien.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Encriptaci%C3%B3n":{"title":"Encriptación","content":"\n\u003e La encriptación es el proceso [[thoughts/Criptografía|criptográfico]] de convertir la muestra original de una información (plaintext) en una forma alternativa (ciphertext).\n\n![[thoughts/images/Pasted image 20230704200622.png]]\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Internet":{"title":"Internet","content":"\nInternet es una infraestructura de red de comunicaciones donde los nodos son routers.\nNo debe ser confundido con la web, que es una red de información cuyos nodos son documentos.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Jard%C3%ADn-digital":{"title":"Jardín digital","content":"\nUn __jardín__ digital es una colección de ideas en crecimiento que no están estrictamente organizadas por su fecha de publicación. Estas ideas se escriben para explorar y para conectarlas con otras. Las ideas no están definidas ni completadas, son pensamientos sin acabar que crecerán y madurarán con el tiempo.[^1]\n\nUn jardín __digital__ no es más que llevar esta filosofía llevada a un sitio web personal, siendo así las notas las semillas y el agua la incorporación de nueva información.\n\nA diferencia de un blog donde se escriben artículos, las notas en un jardín permiten conectar ideas y diferentes fuentes de información con el objetivo de permitir que crezcan y que acaben dando como frutos notas más elaboradas.\n\n## Fases de una nota\nEn mi jardín he decidido dividir las notas que escribo y clasificarlas por su estado de 'maduración'.\n\n![[thoughts/images/SeedEvolution.png]]\n\n* Seed: es la idea inicial recién escrita y a medio-acabar.\n* Sapling: es una nota derivada de otra o con algo de maduración.\n* Fruit: representa una nota que involucra muchas otras y que representa algo complejo o detallado.\n\n[^1]: Fuente: [https://maggieappleton.com/garden-history](https://maggieappleton.com/garden-history)\n[^2]: Fuente: [https://jzhao.xyz/posts/digital-gardening](https://jzhao.xyz/posts/digital-gardening)\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/M%C3%BAsica":{"title":"Música","content":"\nLa música es el [[thoughts/Arte|arte]] de combinar sonidos o instrumentos.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Originalidad":{"title":"Originalidad","content":"\nrelacionado: [[thoughts/Rebuscar|rebuscar]], [[thoughts/Creatividad|creatividad]]\n\nNo podemos afirmar que la originalidad existe, ya que todo está creado y nuestros pensamientos e ideas tienen una base en otras que habremos consumido hace tiempo, lo verdaderamente original recae entonces en la forma única de [[thoughts/Rebuscar|incorporar y moldear algo hasta dotarlo de nuestra propia identidad]] y hacerlo \"nuestro\".","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Peer-to-peer":{"title":"Peer to peer","content":"\nA diferencia del modelo cliente-servidor, los sistemas peer-to-peer son redes descentralizadas sin nodos privilegiados. \n\n![[thoughts/images/Pasted image 20230712182230.png]]\n\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Privacidad":{"title":"Privacidad","content":"\n\u003e La privacidad es la garantía de que tus [[thoughts/Datos|datos]] sólo son vistos por las partes a las que van dirigidos.\n\nEn Internet, el concepto de privacidad absoluta no se puede conseguir, no se trata de una meta u objetivo sino más bien en un camino en el que intentamos proteger nuestros datos.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Rebuscar":{"title":"Rebuscar","content":"relacionado: [[thoughts/Inspiracion|inspiracion]]\n\nDesde pequeño siempre me ha encantado explorar y rebuscar entre cacharros, carpetas y cajas en casa de mi Abuela, no buscaba nada en específico, simplemente era muy gratificante encontrar algo interesante que contuviera para mí algo que con lo que jugar, algunas de las cosas que me fascinaba encontrar eran libros con pétalos de flores marchitados dentro porque siempre comprobaba si quedaba algo del olor de la flor, CDs con fotos o cassetes con fotos sin revelar de esa época; me encantaba mirar a través de ellos sobreponiendo la luz.\n\nA día de hoy, esta dinámica ha definido cómo me inspiro y consumo contenido en Internet.\n\nMe gusta  pensar que cada persona está formada por pequeños pedacitos de otra, que cuando nos gusta mucho algo lo copiamos y moldeamos hasta hacerlo algo nuestro e incorporarlo.\n\nTambién podemos pensar que cada persona es como una casa, formada desde los cimientos por bloques contribuidos y aportados por otras personas -o por ti mismo-.\n\n![[thoughts/images/HomeBuilding.png|300]]\n\nEs un poco loco pensar en la cantidad de personas que te influyen o han influido a lo largo de tu vida, cada video de YouTube que cambió tu forma de pensar sobre algún aspecto específico de la vida o esa persona que años atrás te hizo tener más vergüenza y timidez.\nPor este motivo es por el que considero tan importante rodearte de gente que te aporte, te haga sentir seguro, cómodo y te te permita volar y crecer.\n\nCreo que si he formado una amistad con alguien es porque compartimos -por pequeña que sea- una misma visión sobre el mundo.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Ritmo-de-la-vida":{"title":"Midiendo el ritmo de la vida","content":"\nA veces la vida se siente como si tuviera un ritmo, como si de olas se tratase, estados de ánimos que suben y bajan.\n\nAlto's Odyssey es un juego muy lineal en el cual el jugador simplemente tiene que recorrer un desierto infinito deslizándose sobre las dunas con su tabla, es increíblemente relajante porque tan solo tienes que centrarte en cuando dar el salto correcto y en ver como toda la estética se une.\n\nCuando lo jugué una aburrida tarde de verano jamás pensé que me fuera a sentir tan representado con ese simple personaje cuya única función es dejarse llevar por la corriente y tratar de no caerse en algunos abismos que hay por el camino.\n\n![[thoughts/images/altosgame.png]]\n\nEl otro día, dando un paseo mientras observaba el mar me quedé un rato mirando las olas y después de un tiempo me fijé en como parecían representar picos y ritmos en línea.\n\n![[thoughts/images/waves-visualization.jpg]]\n\nTodo aquello me llevó a pensar, ¿y si pudiéramos representar el ritmo de la vida? ¿y si pudiéramos visualizar ese ritmo en una aplicación de salud mental?\n\n![[thoughts/images/visualizacion-felicidad.png]]\n\n\n\n## Parametrizando\n\nEntonces me puse a pensar en formas de parametrizarlo, para [medir una frecuencia](https://es.wikipedia.org/wiki/Frecuencia_card%C3%ADaca) existe la siguiente fórmula:\n\n$$ f = \\frac{n \\ veces}{T} $$\n\nPor ejemplo, todos conocemos la frecuencia cardíaca:\n\n$$ f = \\frac{n \\ latidos}{minuto} $$\n\nPero ¿qué contamos y qué tiempo tendríamos en cuenta?\n\nCreo que la mejor forma sería contar el número de veces que disfrutas la vida, la felicidad, esos momentos donde recibes un momento de claridad y piensas \"fuck, life is good\", el tiempo podría ser como queramos visualizarlo, en días, meses o años.\n\n$$ f = \\frac{felicidad}{día} $$\n\n## ¿Cómo medimos la felicidad?\n\nImagina que te sientes [*sin problemas, hidratado, feliz, en tu línea, centrado y floreciente*](https://knowyourmeme.com/memes/unbothered-moisturized-happy-in-my-lane-focused-flourishing) y quieres registrar ese momento de felicidad para que sea representado.\n\n![[thoughts/images/frogandtoadvinito.jpg|400]]\n\n¿Cómo calificamos nuestra felicidad? ¿qué valor le damos? ¿de qué forma la medimos?\nEsto se vuelve verdaderamente complicado *como la psicología en si misma* cuando tienes que considerar que [podemos sentir dos emociones contradictorias a la vez](https://youtu.be/G9rIdj1lyJ4?t=847) y solo manifestar una en ese momento.\n\nTambién puedes no sentirte ni triste ni feliz, algo neutro, o no saber identificar bien qué es lo que sientes.\n\nNo hay un método preciso para medir la felicidad científicamente, lo mejor que podemos hacer son reportes propios, preguntarnos a nosotros mismo.[^1]\n\nLa felicidad tiene un significado distinto para cada persona, es subjetiva y depende de las experiencias, bienestar general y muchísimos más factores.\n\n## Felicidad momentánea y felicidad general\n\nPodemos dividir la felicidad en dos tipos: la felicidad momentánea que considera nuestra estado actual y emociones y la felicidad general que considera nuestras experiencias, el bienestar y nuestra percepción general sobre nosotros.[^1]\n\nPor ejemplo podemos estar feliz momentaneamente por pasar un buen momento con nuestros amigos o familia pero no estar tan feliz generalmente porque estamos teniendo dificultades en otros aspectos de la vida como laboral, amoroso, etc.\n\nLa forma en la nos percibimos, como interpretamos nuestras experiencias y en los que nos centramos y pensamos tiene un gran impacto en la forma en la que sentimos y por lo tanto medimos nuestra felicidad.\n\n\u003e “Happiness, more than anything, is a state of mind, a way of perceiving and approaching ourselves and the world in which we reside.”\n\u003e\n\u003e \\- Sonja Lyubomirsky, The How of Happiness: A Scientific Approach to Getting the Life You Want\n\n### Problemas\n\n* Botón de feliz/sumar y botón de triste/restar.\n\tLa felicidad de ese día será el conteo de felicidad y se restarán por el conteo de tristeza.\n* Escala? Del 1-10??\n\n## Todos:\n* Relacionar diseño y desarrollo de la app con filosofía de cozy software.\n* Relacionar con perduración de datos? registro de los recuerdos?\n\n## Diario\n\n* `06/08/22`:\n\tPrimeros diseños y prototipo.\n\n\t![[thoughts/images/life-rhythm.png]]\n\t![[thoughts/images/Pasted image 20220806233955.png|400]]\n\t![[thoughts/images/Pasted image 20220806234022.png|400]]\n\n[^1]: Fuente: [Estudio](https://positivepsychology.com/measure-happiness-tests-surveys)\n[^2]: Fuente: [YouTube](https://youtu.be/_7EqdyU_nGw)\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/C%C3%B3mo-hackear-tu-carrera-profesional":{"title":"Cómo hackear tu carrera profesional","content":"\n[T3chFest 02/03/2023 15:30, Track 1.](https://t3chfest.es/2023/programa/hackear-tu-carrera-profesional)\n\n- Diagrama de Venn\n- Trazar un plan.\n- Hacerte las siguientes preguntas: ¿qué quiero ser? ¿hasta donde quiero llegar?\n- Qué necesitas.\n- Cómo afecta a como quieres vivir.\n- Valor \u003c-\u003e demanda.\n- Nos pagan por crear valor, no tecnología.\n- Entender el modelo de negocio de tu empresa es esencial para poder mejorar en la empresa.\n- Diseñar tu CV en vez de recopilar tu experiencia solamente, contar los puntos o las soft skills que has aprendido durante el proceso y explicar el valor que tiene ello y orientarlo al valor con el que se alinee la empresa.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/Desarrollo-y-dise%C3%B1o-todos-a-una-fuenteovejuna":{"title":"Desarrollo y diseño, todos a una fuenteovejuna","content":"\n[T3chFest 03/03/2023 09:00, Track 1.](https://t3chfest.es/2023/programa/desarrollo-y-diseno-todas-a-una-fuenteovejuna)\n\n## Investigar\n- Penpot\n\n## Cómo mejorar la relación entre diseño y desarrollo\n- Involucrar a desarrollo desde el principio\n- Buenas prácticas\n- Buen naming\n- SVG\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/Descubre-c%C3%B3mo-tus-datos-gen%C3%A9ricos-te-hacen-%C3%BAnico-entre-millones-de-usuarios":{"title":"Descubre cómo tus datos genéricos te hacen único entre millones de usuarios","content":"\n[T3chFest 02/03/2023 11:30, Track 4.](https://t3chfest.es/2023/programa/datos-genericos-unico-millones-usuarios)\n\nrelacionado: [[thoughts/Datos|datos]]\n\n## Tipos de datos\n- Identificables.\n- No identificables.\n\n\u003e Nuestros intereses en un grupo amplio nos pueden hacer identificables.\n\nLas plataformas de anuncios de Facebook/Meta y LinkedIn nos permiten poner un anuncio cuyo único target sea un individuo sabiendo unos cuantos intereses que le hacen único.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/La-comida-no-se-tira-IA-y-Datos-para-disminuir-el-desperdicio-de-alimentos":{"title":"¡La comida no se tira! IA y Datos para disminuir el desperdicio de alimentos","content":"\n[T3chFest 02/03/2023 12:30, Track 2.](https://t3chfest.es/2023/programa/ia-datos-disminuir-desperdicio-alimentos)\n\nSe desperdicia el 30% de comida producida a nivel global.\nAdemás, se desperdician también los recursos destinados a producir dicho alimento (agua, suelo, proceso, etc).\n\n- La producción de alimentos produce el 10% de emisiones mundiales.\n- Donde más se desperdicia es en las casas.\n\nIkea desarrolló un sistema llamado WasteWatcher, compuesto por una báscula, un cubo de basura y una tablet encima con un led debajo y una cámara con un sistema de reconocimiento de alimentos que indica lo que se gastó para producirlo y ayuda a mitigar el desperdicio.\n\nLixiviado: líquido residual, generalmente tóxico, que se filtra de un vertedero.\n\nEn 2017 Ikea redució el desperdicio un 50%.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/Soy-mayor-no-idiota.-La-brecha-digital-y-las-claves-del-dise%C3%B1o-inclusivo.":{"title":"Soy mayor, no idiota. La brecha digital y las claves del diseño inclusivo.","content":"\n[T3chFest 02/03/2023 10:00, Track 1.](https://t3chfest.es/2023/programa/soy-mayor-no-idiota-brecha-digital-inclusividad)\n\n## ¿Qué es la brecha digital?\nLa desigualdad digital entre grupos de población.\n\n## Visualicemos\nConfusión, frustración, humillación.\n\nCiclo: necesitar usar un producto o servicio digital → no poder → la única forma de recibir ayuda es de forma digital.\n\n9 millones de personas mayores, el 40% no utiliza internet.\n\n### Motivos\n- Económica\n- Falta de motivación\n- Dificultad de uso\n\n## Caso real\nCarlos San Juan recogió firmas para dar soporte a esas personas mayores,\n\n## ¿Qué podemos hacer?\n- Reconocerlo.\n- Pensar de manera inclusiva\n\t- Empatía y pensar cómo lo usaría una persona mayor.\n- Excelencia\n- Disrupción, dejar de pensar de la misma manera de siempre\n- Presencia, que se sientan representados/as en el producto.\n- Tener en cuenta problemas visuales / cognitivos / memoria.\n\n## Ideas\n1. Priorizar la accesibilidad.\n\t- También se reduce la brecha con otras personas.\n\t- El W3C establece las pautas y muchas páginas que dicen cumplirlo no lo cumplen.\n2. Go big or go home\n\t- Pensar en botones grandes.\n3. Investigar\n\t- Incluirlos en los procesos de investigación y pruebas.\n4. Pensar alternativas\n\t- Comando por voz, reconocimiento facial, biometría.\n5. Simplificar al máximo\n\t- No solo en interfaz sino en todos los procesos.\n6. Usabilidad a tope\n\t- Nielsen Forman\n\t- Que el sistema informe de lo que está pasando (cargando, moviendo)\n\t- Adecuar entre el mundo tecnológico y el mundo real, usar términos reales dejar conceptos (error 404)\n\t- Control y libertad del usuario, dar opción de deshacer, dejar claro los pasos, poder volver al paso anterior.\n\t- Consistencia y estándares, hacer uso de iconografía y cosas y usar elementos que son estándar y siempre dejar claro su función (barra de búsqueda con icono dentro).\n\t- Reconocer mejor que recordar, no abusar de iconografía, apoyarnos siempre de literales claros, concisos y descriptivos.\n\t- Flexibilidad y eficiencia, facilitar los usos frecuentes\n\t- Estética y diseño minimalista\n\t\t- No mostrar información irrelevante o secundaria, información importante\n\t- Prevención de errores en formularios\n\t\t- Placeholders\n\t\t- Mensajes apropiados y descripciones apropiadas\n\t- Ayuda y documentación\n\t\t- Apoyar con ayuda contextual y describir los elementos de la página\n\t\t- Página de ayuda de la web de plena inclusión\n7. Idea +1\n\t- Marcas inclusivas, a las empresas les puede ayudar al negocio\n\t- Enseñar desde la paciencia (guías sobre cómo usar algo en papel)\n\t- Traducir el lenguaje para que lo puedan entender y aprender\n\n\u003e El diseño inclusivo es una fuente de innovación y contribución a la sociedad, significa crear mejores productos para todos.\n\u003e\n\u003e -- Kat Holmes, Google\n\n## Preguntas\n- Merece la pena sacrificar cosas en favor de la accesibilidad? Lo ideal sería tener un producto que sea tan genial que todos quieran y puedan usarlo.\n- Considerar y debatir los estándares, a veces no son correctos y para quién y quiénes los escriben.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/T3chFest/Un-paseo-por-la-evoluci%C3%B3n-del-frontend":{"title":"Un paseo por la evolución del frontend","content":"\n[T3chFest 03/03/2023 17:00 Track 1.](https://t3chfest.es/2023/programa/un-paseo-por-la-evolucion-del-frontend)\n\n### Fase 1\n- Vanilla\n\n### Fase 2\n- JQuery\n\n### Fase 3\n- Backbone\n- AngulasJS\n\n### Fase 4\n- Vue\n- React\n- Angular\n\n### Fase 5\n- Jamstack\n- Gatsby\n- Vite\n- Webpack\n- Esbuild\n- Rollup\n- create-react-app\n\n### Fase 6\n- Next\n- Astro\n- Remix\n- Nuxt\n\n### Futuro\n- tRPC\n- WebAssembly\n- Qwik\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Ventanas-al-mundo":{"title":"Ventanas al mundo","content":"\nHay tantas cosas en este mundo que parecen a ventanas hacía un mundo, una realidad. El cristal de la guagua, del tren, las pantallas.\n\n![](https://d2w9rnfcy7mm78.cloudfront.net/7313098/original_9d545976329afa4fee4b6207fd1a0dac.jpg?1589689443?bc=0 \"Imagen de una ventana que da a la naturaleza\")\n\nVoy observando a través del cristal, buscando una muestra insignificante de algo a lo que aferrarme, busco esa hierba que crece en los pequeños trozos al descubierto de tierra entre la acera y su bordillo, esa pequeña minucia que crece en un descuidado trozo en la calzada.\n\nMiro a través del cristal buscando una realidad que no me haga sentir atrapado, que deje de hacer sentir mi vida tan monótona y continua, busco sentirme inspirado viendo una realidad alentadora.\n\nObservo para sentir que mi entorno avanza conmigo, observo para apreciar y conocer otras realidades.\nAunque a veces, la realidad con la que me encuentro no es reconfortante, es asfixiante y pesimista.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Viajes":{"title":"Viajes","content":"\nLos viajes son recorridos que hacemos, a veces de un origen a un destino, otras veces sin destino.\nLo que encuentro magnífico de los viajes es que te permiten centrarte en una sola cosa: avanzar. Eventualmente todos los elementos de tu alrededor, entorno y mente dejan de tener relevancia, sois solo dos, tú y el viaje.\n\nLo verdadero enriquecedor es cómo consigue centrar todas tus energías en un único propósito, como permite a tu mente centrarse en un único objetivo y cómo ello te permite experimentar nuevas experiencias y sensaciones durante el camino, con más calma y de forma más emotiva.\n\nY un viaje no tiene por que significar un avión o recorrer largas distancias. Lo único necesario para un viaje gratificante para mí es que llegue a suponer un reto, una misión, un objetivo.\n\nY cuando decides tomar el viaje por tu cuenta, caminando, esta experiencia se expande porque generalmente no hay ningún obstáculo entre tú y tu destino.\nCuando tienes que ir a coger una guagua que llega en 7 minutos a la parada haciendo un trayecto de \"15 minutos\", estás tan solo tú en control del viaje, controlando el ritmo de tus pasos, por lo tanto eres tú el único obstáculo y la sensación por un instante es que estás en  control de tu tiempo.\n\nCaminar es la única forma de controlar el tiempo.\n\nA diferencia de cualquier vehículo con unas velocidades medidas y un sistema de funcionamiento que no comprendes al caminar eres tú el único a cargo, es un sistema que conoces y cuyo ritmo puedes marcar con exactitud.\n\nTodo este bonito texto para intentar justificar pillar la guagua a punto de perderla cada mañana...\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/Vigilancia-masiva":{"title":"Vigilancia masiva","content":"La vigilancia masiva se produce cuando un estado o figura de poder ejerce una vigilancia masiva y se recopilan datos de forma indiscriminada, suponiendo así una ruptura de la [[thoughts/Privacidad|privacidad]] de la persona.\n","lastmodified":"2023-09-14T17:34:52.818275395Z","tags":null},"/thoughts/learnings/Agile":{"title":"Agile","content":"\nLas metodologías ágiles son unas metodologías para trabajar.\n\n## Origen\nEl manifiesto ágil se originó a principios de 2001 en Utah.\n\n## Principios del manifesto\nhttps://agilemanifesto.org/principles.html\n\n\u003e Our highest priority is to satisfy the customer\nthrough early and continuous delivery\nof valuable software.\n\n\u003e Welcome changing requirements, even late in\ndevelopment. Agile processes harness change for\nthe customer's competitive advantage.\n\n\u003e Deliver working software frequently, from a\ncouple of weeks to a couple of months, with a\npreference to the shorter timescale.\n\n\u003e Business people and developers must work\ntogether daily throughout the project.\n\n\u003e Build projects around motivated individuals.\nGive them the environment and support they need,\nand trust them to get the job done.\n\n\u003e The most efficient and effective method of\nconveying information to and within a development\nteam is face-to-face conversation.\n\n\u003e Working software is the primary measure of progress.\n\n\u003e Agile processes promote sustainable development.\nThe sponsors, developers, and users should be able\nto maintain a constant pace indefinitely.\n\n\u003e Continuous attention to technical excellence\nand good design enhances agility.\n\n\u003e Simplicity--the art of maximizing the amount\nof work not done--is essential.\n\n\u003e The best architectures, requirements, and designs\nemerge from self-organizing teams.\n\n\u003e At regular intervals, the team reflects on how\nto become more effective, then tunes and adjusts\nits behavior Return to Manifesto\naccordingly.\n\n# Scrum\nhttps://www.atlassian.com/es/agile/scrum\nhttps://www.scrum.org/learning-series/what-is-scrum\n\nScrum es un marco de trabajo ágil popular, aunque también se aplica en otros proyectos que requieren un enfoque iterativo e incremental. Proporciona una estructura para la gestión y organización de equipos con el objetivo de desarrollar productos complejos de manera eficiente y adaptable.\n\nLas principales características de Scrum incluyen:\n\n1. Roles: Scrum define tres roles principales: el Product Owner, el Scrum Master y el Equipo de Desarrollo. Cada uno tiene responsabilidades específicas para garantizar el éxito del proyecto.\n\n2. Artefactos: Scrum utiliza diferentes artefactos para facilitar la colaboración y la comunicación entre los miembros del equipo. Los principales artefactos son el Product Backlog, el Sprint Backlog y el Incremento del Producto.\n\n3. Eventos: Scrum establece eventos regulares para sincronizar y planificar el trabajo del equipo. Los eventos principales son la Planificación del Sprint, la Reunión Diaria del Scrum, la Revisión del Sprint y la Retrospectiva del Sprint.\n\n4. Sprints: Scrum divide el trabajo en iteraciones llamadas Sprints. Cada Sprint tiene una duración fija, generalmente de una a cuatro semanas, y tiene como objetivo entregar un incremento de producto potencialmente entregable al final del mismo.\n\nLos principios clave en Scrum incluyen la transparencia, la inspección y la adaptación continua. Scrum se basa en la retroalimentación constante y el aprendizaje empírico para adaptarse a medida que avanza el proyecto y las necesidades del cliente se vuelven más claras.\n\nEl enfoque de Scrum permite a los equipos trabajar de manera colaborativa, responder rápidamente a los cambios y entregar valor de forma iterativa. Además, promueve la comunicación abierta y la autoorganización del equipo, fomentando la responsabilidad compartida y el compromiso con los objetivos del proyecto.\n\n# Gitflow\nReune un conjunto de metodologías para trabajar con Git.\n","lastmodified":"2023-09-14T17:34:52.838275534Z","tags":null},"/thoughts/learnings/HTML":{"title":"HTML","content":"\nHTML (HyperText Markup Language)  es un lenguaje de marcas para crear páginas o documentos en internet.\n","lastmodified":"2023-09-14T17:34:52.838275534Z","tags":null},"/thoughts/learnings/React":{"title":"React","content":"\n# React\nReact es una de las bibliotecas más importantes para construir en la web, se usa principalmente para construir interfaces de usuario.\nReact __no es un framework__, se catalogaría mejor como una librería. React además puede ser usado en más escenarios aparte de la web.\n\nEl objetivo principal de React es minimizar los errores que ocurren cuando los desarrolladores construyen interfaces de usuario. Esto lo hace mediante el uso de componentes, piezas de código lógicas y auto-contenidas que describen una parte de la UI. Estos componentes se pueden juntar para crear una interfaz de usuario completa, y React abastrae la mayor parte del trabajo.\n\n## Abstracción\nLa abstracción es un método que pretender simplificar un concepto para no tener que entender cómo funcionan los sistemas complejos por debajo.\n\n### Contenidos\n- Resumen sobre React, entendiendo conceptos.\n- Introducción a JSX\n- Componentes, props, estados, eventos\n- Hooks básicos\n- Hooks avanzados\n- Muchos ejemplos prácticos\n- Estructuras de carpetas, enrutado\n- Enrutador desde cero\n- Contexto, estados globales\n- Typescript, buenas prácticas, Docker\n- Testing, testing end-to-end tdd, lazy loading, import dinámicos\n- React Query, custom hooks\n\n### Recursos\n- Documentación en beta, https://beta.es.reactjs.org/\n- Wiki con preguntas frecuentes, https://reactjs.wiki\n- Developer tools, https://beta.reactjs.org/learn/react-developer-tools\n\n## Qué es\n[React](https://beta.es.reactjs.org/) es una biblioteca de JavaScript para construir interfaces de usuario independientemente de la plataforma, se puede usar para construir aplicaciones web, móviles o de terminal.\n\n* Declarativo, nos permite crear estas interfaces de una manera muy sencilla.\n* Basado en componentes, los componentes son piezas de la interfaz que podemos reutilizar, si cambiamos algo en un componente se cambiará en todas las partes donde se use.\n* Universal, se puede ejecutar tanto desde el lado del cliente como desde le servidor.\n\nReact es una biblioteca de código abierto creada por Meta/Facebook, se creó en 2011 como una forma de simplificar las interfaces de usuario, se creó porque era muy difícil trabajar con formularios.\n\n## Razones para aprender React\n1. Framework más demandado en mundo occidental con mucha salida laboral.\n2. Los conceptos se pueden usar para desarrollar apps moviles con React Native.\n3. Mantenimiento asegurado, lleva una gran empresa y comunidad detrás.\n4. Aprender React te ayudará con el resto de frameworks, muchos de los conceptos se pueden aplicar al resto.\n5. Futuro prometedor.\n6. API estable, mantienen mucha de la sintaxis porque se centran en no romper algo anterior.\n7. Comunidad gigante y activa.\n\n## Código imperativo\nEs una forma de escribir código declarando implicitamente cómo lo tiene que hacer.\n\nEjemplo de código usando librerías de React en HTML puro:\n```js\nconst button = React.createElement('button', { 'data-id': 123 }, 'Button 1')\nroot.render(button)\n```\n\n## Código declarativo\nEs una forma de escribir código describiendo lo que queremos que haga.\n\nEjemplo de código usando JSX:\n```js\n\u003cReact.Fragment\u003e\n\t\u003cbutton data-id=\"123\"\u003eButton 1\u003c/button\u003e\n\u003c/React.Fragment\u003e\n```\n\n## Apuntes 01\n- En React todo es un componente.\n- Es como un árbol, se inicia desde la base o root.\n- React prevee muy bien la inyección de código malicioso.\n\n## Conceptos React\n\n### Reactivo\nRefleja los cambios en la interfaz volviendo a renderizar.\n\nEn React hay dos razones por las que un componente se puede volver a renderizar:\n* Ha cambiado de estado.\n* Se ha cambiado al padre y por lo tanto se propaga y se vuelven a renderizar en forma de árbol hacía abajo.\n\n### Virtual DOM\nEn lugar de volver a redenrizar toda la página lo único actualiza es aquello que cambia.\n\n## [JSX](https://facebook.github.io/jsx/)\nEs una extensión de ECMAScript que está basada en XML y nos permite programar de una forma mucho más declarativa y menos verbosa.\n\nEs una extensión de JavaScript, escribes una especie de XHTML donde describes la interfaz que quieres crear.\n\n### Expresiones\nUsando llaves permite evaluar expresiones. Permite usar variables, ejecutar una función, etc.\n\n```js\nconst name = 'Miguel'\n\u003ch1\u003eHola, {name}\u003c/h1\u003e\n\u003cstrong\u003eNumero aleatorio {Math.random()}\u003c/strong\u003e\n```\n\nRecordatorio: no serviría poner un `if` u otra estructura porque no es una expresión, es una declaración.\n\n## Transpilador\nUn transpilador convierte JavaScript y lo transforma.\nCuando usamos JSX tiene que pasar por un proceso de traspilación usando dichas herramientas para poder convertirlo a HTML/JS entendible por el navegador, cuando escribimos JSX no estamos escribiendo HTML directamente, estamos escribiendo JavaScript.\n\nTranspiladores conocidos:\n\n- Babel\n- SWC\n\n## Código inicial\nPara poder trabajar con React en un proyecto debemos tener la siguiente estructura y declarar lo siguiente:\n\nEn el `index.html` debe crear un div principal __llamado root o main__ y cargar el jsx principal con la etiqueta script.\n\n```html\n\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\n  \u003chead\u003e...\u003c/head\u003e\n  \u003cbody\u003e\n    \u003cdiv id=\"root\"\u003e\u003c/div\u003e\n    \u003cscript type=\"module\" src=\"/src/main.jsx\"\u003e\u003c/script\u003e\n  \u003c/body\u003e\n\u003c/html\u003e\n```\n\nA continuación nuestro módulo principal que puede ser un archivo `.js`/`.jsx` debe crear un root y renderizarlo.\n\nEl siguiente código lo que hace es crear un root seleccionado el div root que creamos anteriormente y renderizar a partir de este incorporando nuestro componente principal `\u003cApp /\u003e`.\n\n```jsx\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  \u003cReact.StrictMode\u003e\n    \u003cApp /\u003e\n  \u003c/React.StrictMode\u003e,\n)\n\n```\n\n## Componentes\nUn componente es una función que devuelve un elemento.\n* Se escriben en **PascalCase** para que React diferencie y no  genere conflicto con elementos HTML, se declaran de forma imperativa, su nombre no indica lo que hace `createButton` sino más bien lo que mostrar `Button`.\n\n```jsx\nconst Button = ({ text }) =\u003e {\n  return (\n    \u003cbutton\u003e{text}\u003c/button\u003e\n  )\n}\n\nReactDOM.createRoot(root).render(\n  \u003cReact.Fragment\u003e\n    \u003cButton text='Texto1' /\u003e\n    \u003cButton text='Texto2' /\u003e\n  \u003c/React.Fragment\u003e\n)\n```\n\n### Keys en los componentes\nCuando renderizamos componentes de una lista (ej: usuarios obtenidos de la base de datos) debemos asignarle una clave única al componente pasado como [prop](#props).\n\n```jsx\nconst users = [\n  { name: 'Vicente', userName: 'vicente015' },\n  { name: 'Manolo', userName: 'manolo12' }\n]\n\nexport function App () {\n  return (\n    \u003csection className='tw-follows'\u003e\n      {\n        users.map(({ isFollowing, name, userName }) =\u003e (\n          \u003cTwitterFollowCard\n            key={userName}\n            // La key debe ser un identificador único de dichos datos, no debe ser arbitrario (ej Math.random)\n            // id db \u003e username \u003e index\n            userName={userName}\n          \u003e\n            {name}\n          \u003c/TwitterFollowCard\u003e\n        ))\n      }\n    \u003c/section\u003e\n  )\n}\n```\n\n## Estilos en React\n* Estilos en línea\n```jsx\n\u003cdiv style={{ color: red }}\u003e\u003c/div\u003e\n```\n* Declarar aparte e importar\n```jsx\nimport './App.css'\n```\n\n### Renderizado condicional\nSe renderiza una cosa u otra dependiendo de una condición.\n\n```jsx\nconst text = isFollowing ? 'Siguiendo' : 'Seguir'\n\u003cspan\u003e\n\t{text}\n\u003c/span\u003e\n```\n\n## Componente vs elemento\nPodríamos decir que un componente es una factoría de elementos, un componente sería una función que al ejecutarla te devuelve elementos. React renderiza elementos.\n\n## Props\nLas 'props' son argumentos o estados que se le pasan a los componentes, puede ser cualquier tipo de dato, incluso un elemento, deben ser inmutables, es decir que no se pueden modificar después.\n\n* **Los props deben tratarse como inmutables**, no deben ser modificados directamente, cuando tengan que ser actualizados debe hacerse una copia.\n\n### Prop `children`\nLa prop children es todo en lo que envueltas el elemento.\n\n```jsx\n\u003cComponente\u003eEsto sería el children\u003c/Componente\u003e\n// Desde el componente se obtedría así:\nfunction Componente ({ children }) {}\n```\n\n## Estados\nUn estado es una propiedad que altera la interfaz, responde a los cambios del usuario.\n\n* **Los estados deben tratarse como inmutables**, no deben ser modificados directamente, cuando tengan que ser actualizados debe hacerse una copia.\n* La actualización del estado es **asíncrono**.\n\n```jsx\nconst [state, setState] = useState(null)\n\nconst newState = true\nsetState(newState)\nconsole.log(state) // null\n// Devuelve aún el estado anterior porque la ejecución del cambio de estado es asíncrono por lo que no interrumpe la ejecución y la siguiente línea se ejecuta\n```\n\n## Hooks\nLos hooks permiten funcionalidades a los componentes o poder ejecutar código arbitrario cuando ocurran ciertas cosas en componentes.\n\n- **Los hooks no pueden estar dentro de una condición, siempre en el cuerpo del componente.**\n\n### `useState`\nPermite interactuar con un estado, cada vez que cambia dicho estado React re-renderiza el componente para hacer notar los cambios.\n\n### `useEffect`\nNos permite ejecutar código arbitrario cuando __se monta el componente__ en el DOM y cada vez que cambien las dependencias que nosotros le indiquemos. **Cuando usas un useEffect deberías considerar hacer un custom hook.**\n\nEjemplo: para enviar datos nuevos a una DB, suscribirse a un evento\n\n```jsx\nimport { useState, useEffect } from 'react'\nconst Componente = () =\u003e {\nuseEffect(codeToExecute, listOfDependencies)\n\nuseEffect(() =\u003e {\n  // Cada vez que se renderize nuestro componente\n  console.debug('Código a ejecutar')\n}, [dependencies]) // La lista de dependencias es opcional\n\nuseEffect(() =\u003e {\n  // Como minimo se ejecuta una vez, cuando se renderiza por primera vez\n  console.log('useEffect')\n}, [])\n```\n\n#### Cleanup\nCuando dentro del `useEffect` devolvemos un callback este se interpreta como un __cleanup__, una función que se ejecuta para limpiar el efecto (dejar de escuchar eventos, etc) cada vez que se desmonte o se actualicen dependencias.\n\nSegundo argumento:\n- `[]` =\u003e solo se ejecuta una vez cuando se monta\n- `[enabled]` =\u003e se ejecuta cuando cambia enabled y se monta\n- `undefined` =\u003e se ejecuta cada vez que se renderiza\n\n```jsx\nuseEffect(() =\u003e {\n    if (enabled) {\n      window.addEventListener('pointermove', handleMove)\n    }\n\n    // Limpieza del efecto\n    // Se ejecuta solo cuando se desmonte el componente o actualice dependencias\n    return () =\u003e {\n      window.removeEventListener('pointermove', handleMove)\n    }\n  }, [enabled])\n```\n\n### `useRef`\nTe permite crear una referencia mutable que persiste durante todo el ciclo de vida del componente, muy útil para guardar un elemento que pueda mutar (contador, identificador, elemento del DOM) y cada vez que cambie no se vuelve a renderizar.\n\n```jsx\nconst inputRef = useRef()\n\nconst handleClick = () =\u003e {\n\tconst value = inputRef.current.value\n}\n\n\u003cinput onClick={handleClick} ref={inputRef} /\u003e\n```\n\n### `useMemo`\nHace que un cálculo solo se haga cuando se cambien las dependencias indicadas evitando que se haga constantemente cuando se re-renderiza un componente.\n\n**❗ OJO:** Dentro del cuerpo de un customHook todo se vuelve a ejecutar cuando se re-renderiza.\n\n```jsx\n// Solo se ejecuta si sort (booleano) o movies cambia\nconst sortedMovies = useMemo(() =\u003e {\n\treturn sort\n\t\t? [...movies].sort((a, b) =\u003e a.title.localeCompare(b.title))\n\t\t: movies\n}, [sort, movies])\n\n// Se ejecuta solo la primera vez\nconst getMovies = useMemo(() =\u003e {\n\treturn async () =\u003e {\n\t\tlet results = await getResults()\n\t\treturn results\n\t}\n}, [])\n```\n\n### `useCallback`\nUna forma más sencilla, similar al `useMemo` pero solo para las funciones, por debajo usa el `useMemo`. Se debe usar en vez del `useMemo` si queremos optimizar una función.\n\n```jsx\nconst getMovies = useCallback(async () =\u003e {\n\tlet results = await getResults()\n\treturn results\n}, []])\n```\n\n## Custom Hooks\nUn «hook personalizado» es una función que empieza por `use` y que puede utilizar otros hooks. Son ideales para reutilizar lógica en diferentes componentes.\n\n```jsx\n// ./hooks/useCounter.js\nexport function useCounter() {\n  const [count, setCount] = useState(0)\n\n  const increment = () =\u003e setCount(count + 1)\n  const decrement = () =\u003e setCount(count - 1)\n\n  return { count, increment, decrement }\n}\n\n// App.jsx\nimport { useCounter } from './hooks/useCounter.js'\n\nfunction Counter() {\n  const { count, increment, decrement } = useCounter()\n\n  return (\n    \u003c\u003e\n      \u003cbutton onClick={decrement}\u003e-\u003c/button\u003e\n      \u003cspan\u003e{count}\u003c/span\u003e\n      \u003cbutton onClick={increment}\u003e+\u003c/button\u003e\n    \u003c/\u003e\n  )\n}\n```\n\n### Montado doble al iniciar usando `\u003cReact.StrictMode\u003e`\nAl usar el componente `React.StrictMode` para envolver nuestra app en entorno de desarrollo este monta, desmonta y vuelve a montar los componentes para asegurarse de que no tienen fallos, es simplemente para depurar, no ocurre en producción.\n\n```jsx\n\u003cReact.StrictMode\u003e\n  \u003cApp /\u003e\n\u003c/React.StrictMode\u003e\n```\n\n## Formularios\nHay dos formas de gestionar formularios con React:\n\n* Descontrolada 🤪 / no controlado por React, obtenemos y validamos los valores al enviar, __útil para evitar usar muchos [useRef](#useRef)__, __suele ser la forma más rápida__.\n```jsx\nexport default function MyForm() {\n  function handleSubmit(event) {\n\t // Prevenir que el navegador recargue la página al enviar\n    event.preventDefault()\n\n    // Leer los datos del formulario\n    const form = event.target\n    const formData = new FormData(form)\n    // Obtiene solo el valor de **un** input\n\t const inputValue = formData.get('myInput') // 'someValue'\n\n    // ? Se le puede pasar a una api como body tmb\n    // fetch('/some-api', { method: form.method, body: formData })\n\n    // Transformar todos los campos a JSON\n    const formJson = Object.fromEntries(formData.entries())\n    console.log(formJson) // { myInput: 'someValue' }\n  }\n\n  return (\n    \u003cform method=\"post\" onSubmit={handleSubmit}\u003e\n      \u003clabel\u003e\n        Text input: \u003cinput name=\"myInput\" defaultValue=\"Some initial value\" /\u003e\n      \u003c/label\u003e\n    \u003c/form\u003e\n  );\n}\n```\n\n* Controlada, es más útil para simplificar la validación de formularios, más lento porque cada vez que se actualice el input se vuelve a renderizar el elemento.\n```jsx\nconst [query, setQuery] = useState('')\nconst [error, setError] = useState(null)\n\nconst handleSubmit = (event) =\u003e {\n  event.preventDefault()\n  console.log(query)\n}\n\n// También podemos validar aquí ;)\nconst handleChange = () =\u003e {\n  const newQuery = event.target.value\n\n  // Una de las ventajas de la forma controlada\n  // es que permite pre-validaciones, de esta forma no se\n  // renderiza la query sin empieza por espacio\n  if (newQuery.startsWith(' ')) return\n  setQuery(newQuery)\n}\n\n// Validar cada vez que cambie query\nuseEffect(() =\u003e {\n  if (query.length \u003c 3) {\n    setError('La búsqueda debe tener al menos 3 caracteres.')\n    return\n  }\n  setError(null)\n}, [query])\n\n\u003cform onSubmit={handleSubmit} \u003e\n  \u003cinput onChange={handleChange} value={query} name='query' /\u003e\n  \u003cbutton type='submit'\u003eEnviar\u003c/button\u003e\n\u003c/form\u003e\n```\n\n## Búsqueda con debounce\nSi queremos hacer una búsqueda automática a medida que el usuario escribe lo más óptimo sería implementar un **debounce**.\n\n### Debounce\nUn patrón de rebote o «debounce» pospone la ejecución de una función hasta que transcurra un determinado tiempo de espera.\n\nNuevos intentos de ejecutar la función cancelarán la ejecución pendiente y reiniciarán el tiempo de espera.\n\n```ts\nconst debounce = (callback, tiempoDeEspera) =\u003e {\n  let timeout\n  return (...args) =\u003e {\n\tclearTimeout(timeout)\n\ttimeout = setTimeout(()=\u003e callback(...args), tiempoDeEspera)\n  }\n}\n\nconst debounce = (fn: Function, waitTime = 300) =\u003e {\n  let timeoutId: ReturnType\u003ctypeof setTimeout\u003e;\n  return (this: any, ...args: any[]) =\u003e {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() =\u003e fn.apply(this, args), waitTime);\n  };\n};\n```\n\n![img](https://coffeebytes.dev/debounce-y-throttle-en-javascript/images/DebounceORebote.png)\n\n---\n\n## Prueba tećnica\nUna de las pruebas más comunes es fetching de datos.\n\n- Dos estados, uno que depende del otro.\n- Saber utilizar el punto de entrada en vez de create-x-app/vite template.\n- Un `useEffect` por responsabilidad.\n- Gestión de errores al final para no perder tiempo al principio.\n- Saber básico de flex.\n- 1 efecto por responsabilidad, no poner varias tareas dentro del mismo.\n- Si preguntan por que hacer después, tests.\n","lastmodified":"2023-09-14T17:34:52.838275534Z","tags":null},"/thoughts/learnings/XPath":{"title":"XPath","content":"\nXPath es un lenguaje de consulta pra seleccionar y localizar elementos en documentos XML.\n\nEl formato básico de una expresión XPath consta de una serie de pasos separados por barras (\"/\"). Cada paso especifica un elemento o atributo en la ruta de acceso al elemento deseado. Por ejemplo:\n\nEjemplo 1: Para seleccionar todos los elementos \"libro\" en un documento XML:\n\n```bash\n/libreria/libro\n```\n\nEjemplo 2: Para seleccionar todos los elementos \"precio\" que estén dentro de un elemento \"libro\" cuyo atributo \"categoria\" sea igual a \"novela\":\n\n```bash\n/libreria/libro[@categoria='novela']/precio\n```\n\n## Expresiones\n\n| Expresión                                   | Descripción                                               |\n|---------------------------------------------|-----------------------------------------------------------|\n| nombre_nodo                                 | Selecciona todos los nodos hijos del señalado             |\n| /                                           | Selecciona desde el nodo raíz                             |\n| //                                          | Selecciona los nodos en el documento que coincidan con el |\n| señalado sin importar dónde estén colocados |\n| .                                           | Selecciona el nodo actual                                 |\n| ..                                          | Selecciona el padre del nodo actual                       |\n| @                                           | Selecciona atributos                                      |\n\n***\n\n| Expresión       | Resultado                                                                                                                          |\n|-----------------|------------------------------------------------------------------------------------------------------------------------------------|\n| libro           | Selecciona todos los hijos del elemento libro                                                                                      |\n| /libro          | Selecciona el elemento raíz libro Nota: Si la expresión comienza por la barra (/) siempre representa una ruta absoluta al elemento |\n| libro/capitulo  | Selecciona todos los elementos capitulo que son hijos de libro                                                                     |\n| //capitulo      | Selecciona todos los elementos capitulo sin importar donde están                                                                   |\n| libro//capitulo | Selecciona todos los elementos capitulo que son descendientes de libro sin importar que lugar ocupan en la jerarquía de libro      |\n| //@public       | Selecciona todos los atributos denominado                                                                                          |\n## Predicados\n\nRestringe la búsqueda a los nodos que cumplan con una condición.\n\nEjemplo:\n\n```bas\n/libro/capitulo[@num=\"1\"]/parrafo\n```\n\n\n## Axes\n\n## Operadores\n\n## Funciones\n\n\n","lastmodified":"2023-09-14T17:34:52.838275534Z","tags":null},"/thoughts/learnings/XSD":{"title":"XSD","content":"\nEl XSD es un formato para describir el esquema de un XML.\n\n## Elemento simple\n\nUn elemento simple es un elemento que solo puede contener texto, no contiene ningún otro elemento ni atributos.\n\n```xsd\n\u003cxs:element name=\"xxx\" type=\"yyy\"/\u003e\n```\n\n### Valor por defecto\n```xsd\n\u003cxs:element name=\"color\" type=\"xs:string\" default=\"red\"/\u003e\n```\n\n## Tipos más comunes\n\n```\n    xs:string\n    xs:decimal\n    xs:integer\n    xs:boolean\n    xs:date\n    xs:time\n```\n\n## Atributos\n```xml\n\u003clastname lang=\"EN\"\u003eSmith\u003c/lastname\u003e\n```\n```xsd\n\u003cxs:attribute name=\"lang\" type=\"xs:string\" use=\"required\"/\u003e\n```\n\n## Restricciones\nLas restricciones se usan para limitar los valores que aceptamos para elementos o atributos.\n\n| Constraint     | Description                                                                                             |\n|----------------|---------------------------------------------------------------------------------------------------------|\n| enumeration    | Defines a list of acceptable values                                                                     |\n| fractionDigits | Specifies the maximum number of decimal places allowed. Must be equal to or greater than zero           |\n| length         | Specifies the exact number of characters or list items allowed. Must be equal to or greater than zero   |\n| maxExclusive   | Specifies the upper bounds for numeric values (the value must be less than this value)                  |\n| maxInclusive   | Specifies the upper bounds for numeric values (the value must be less than or equal to this value)      |\n| maxLength      | Specifies the maximum number of characters or list items allowed. Must be equal to or greater than zero |\n| minExclusive   | Specifies the lower bounds for numeric values (the value must be greater than this value)               |\n| minInclusive   | Specifies the lower bounds for numeric values (the value must be greater than or equal to this value)   |\n| minLength      | Specifies the minimum number of characters or list items allowed. Must be equal to or greater than zero |\n| pattern        | Defines the exact sequence of characters that are acceptable                                            |\n| totalDigits    | Specifies the exact number of digits allowed. Must be greater than zero                                 |\n| whiteSpace     | Specifies how white space (line feeds, tabs, spaces, and carriage returns) is handled                   |\n\n\n### Restringir rango valores\n```xsd\n\u003cxs:element name=\"age\"\u003e\n  \u003cxs:simpleType\u003e\n    \u003cxs:restriction base=\"xs:integer\"\u003e\n      \u003cxs:minInclusive value=\"0\"/\u003e\n      \u003cxs:maxInclusive value=\"120\"/\u003e\n    \u003c/xs:restriction\u003e\n  \u003c/xs:simpleType\u003e\n\u003c/xs:element\u003e\n```\n\n### Restricciones enums\n```xsd\n\u003cxs:element name=\"car\"\u003e\n  \u003cxs:simpleType\u003e\n    \u003cxs:restriction base=\"xs:string\"\u003e\n      \u003cxs:enumeration value=\"Audi\"/\u003e\n      \u003cxs:enumeration value=\"Golf\"/\u003e\n      \u003cxs:enumeration value=\"BMW\"/\u003e\n    \u003c/xs:restriction\u003e\n  \u003c/xs:simpleType\u003e\n\u003c/xs:element\u003e\n```\n\n### Restricciones de patrones\nPodemos definir una restricción en el contenido de un string usando [Regex](https://regexr.com).\n\nEjemplo, restringir 3 primeras iniciales:\n```xsd\n\u003cxs:element name=\"initials\"\u003e\n  \u003cxs:simpleType\u003e\n    \u003cxs:restriction base=\"xs:string\"\u003e\n      \u003cxs:pattern value=\"[A-Z][A-Z][A-Z]\"/\u003e\n    \u003c/xs:restriction\u003e\n  \u003c/xs:simpleType\u003e\n\u003c/xs:element\u003e\n```\n\n### Restricciones de longitud\n```xsd\n\u003cxs:element name=\"initials\"\u003e\n  \u003cxs:simpleType\u003e\n    \u003cxs:restriction base=\"xs:string\"\u003e\n      \u003cxs:pattern value=\"[A-Z][A-Z][A-Z]\"/\u003e\n    \u003c/xs:restriction\u003e\n  \u003c/xs:simpleType\u003e\n\u003c/xs:element\u003e\n```\n\n## Tipos genéricos\nPodemos reutilizar un tipo de dato en varios elementos poniéndolo antes de declararlos, al inicio del esquema.\n\n```xsd\n\u003cxs:simpleType name=\"carType\"\u003e\n  \u003cxs:restriction base=\"xs:string\"\u003e\n    \u003cxs:enumeration value=\"Audi\"/\u003e\n    \u003cxs:enumeration value=\"Golf\"/\u003e\n    \u003cxs:enumeration value=\"BMW\"/\u003e\n  \u003c/xs:restriction\u003e\n\u003c/xs:simpleType\u003e\n\n\u003cxs:element name=\"car\" type=\"carType\"/\u003e\n```\n\n## Elementos complejos\nUn elemento complejo define un elemento XML que contiene otros elementos o atributos.\n\n```xml\n\u003cemployee\u003e\n  \u003cfirstname\u003eJohn\u003c/firstname\u003e\n  \u003clastname\u003eSmith\u003c/lastname\u003e\n\u003c/employee\u003e\n```\n```xsd\n\u003cxs:element name=\"employee\"\u003e\n  \u003cxs:complexType\u003e\n    \u003cxs:sequence\u003e\n      \u003cxs:element name=\"firstname\" type=\"xs:string\"/\u003e\n      \u003cxs:element name=\"lastname\" type=\"xs:string\"/\u003e\n    \u003c/xs:sequence\u003e\n  \u003c/xs:complexType\u003e\n\u003c/xs:element\u003e\n```\n\n### Conteniendo otros elementos\n\n* `\u003cxs:sequence\u003e`: indica que los siguientes elementos deben aparecer en ese orden en el XML.\n* `\u003cxs:all\u003e`: especifica que los elementos hijos pueden aparecer en cualquier orden y cada elemento debe aparecer __al menos 1 vez__.\n* `\u003cxs:choice\u003e`: indica que puede haber un elemento __u__ otro.\n\n### Limitar nº ocurrencias\nPodemos limitar cuantas veces un elemento puede estar.\n\n```xsd\n\u003cxs:element name=\"person\"\u003e\n  \u003cxs:complexType\u003e\n    \u003cxs:sequence\u003e\n      \u003cxs:element name=\"full_name\" type=\"xs:string\"/\u003e\n      \u003cxs:element name=\"child_name\" type=\"xs:string\" minOccurs=\"0\"  maxOccurs=\"10\"/\u003e\n    \u003c/xs:sequence\u003e\n  \u003c/xs:complexType\u003e\n\u003c/xs:element\u003e\n```\n\n### Grupos de elementos\nPodemos definir unos grupos con conjuntos de elementos para referenciarlos varias veces.\n\n```xsd\n\u003cxs:group name=\"persongroup\"\u003e\n  \u003cxs:sequence\u003e\n    \u003cxs:element name=\"firstname\" type=\"xs:string\"/\u003e\n    \u003cxs:element name=\"lastname\" type=\"xs:string\"/\u003e\n    \u003cxs:element name=\"birthday\" type=\"xs:date\"/\u003e\n  \u003c/xs:sequence\u003e\n\u003c/xs:group\u003e\n\n\u003cxs:complexType name=\"personinfo\"\u003e\n  \u003cxs:sequence\u003e\n    \u003cxs:group ref=\"persongroup\"/\u003e\n    \u003cxs:element name=\"country\" type=\"xs:string\"/\u003e\n  \u003c/xs:sequence\u003e\n\u003c/xs:complexType\u003e\n\n\u003cxs:element name=\"person\" type=\"personinfo\"/\u003e\n```\n\n### Grupos de atributos\nTambién podemos definir conjuntos de atributos.\n\n```xsd\n\u003cxs:attributeGroup name=\"personattrgroup\"\u003e\n  \u003cxs:attribute name=\"firstname\" type=\"xs:string\"/\u003e\n  \u003cxs:attribute name=\"lastname\" type=\"xs:string\"/\u003e\n  \u003cxs:attribute name=\"birthday\" type=\"xs:date\"/\u003e\n\u003c/xs:attributeGroup\u003e\n```\n\n## Elemento sustitución (nombres en inglés)\nLos elementos de sustitución nos permiten declarar como una copia o enlace a una etiqueta usando un nombre distinto o en otro idioma.\n\n__Deben declararse al principio del esquema.__\n\n```xsd\n\u003cxs:element name=\"nombre\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"name\" substitutionGroup=\"nombre\"/\u003e\n```\n\n## Ejemplos\n\n```xsd\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\" ?\u003e\n\u003cxs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\u003e\n\n\u003c!-- definition of simple elements --\u003e\n\u003cxs:element name=\"orderperson\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"name\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"address\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"city\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"country\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"title\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"note\" type=\"xs:string\"/\u003e\n\u003cxs:element name=\"quantity\" type=\"xs:positiveInteger\"/\u003e\n\u003cxs:element name=\"price\" type=\"xs:decimal\"/\u003e\n\n\u003c!-- definition of attributes --\u003e\n\u003cxs:attribute name=\"orderid\" type=\"xs:string\"/\u003e\n\n\u003c!-- definition of complex elements --\u003e\n\u003cxs:element name=\"shipto\"\u003e\n  \u003cxs:complexType\u003e\n    \u003cxs:sequence\u003e\n      \u003cxs:element ref=\"name\"/\u003e\n      \u003cxs:element ref=\"address\"/\u003e\n      \u003cxs:element ref=\"city\"/\u003e\n      \u003cxs:element ref=\"country\"/\u003e\n    \u003c/xs:sequence\u003e\n  \u003c/xs:complexType\u003e\n\u003c/xs:element\u003e\n\n\u003cxs:element name=\"item\"\u003e\n  \u003cxs:complexType\u003e\n    \u003cxs:sequence\u003e\n      \u003cxs:element ref=\"title\"/\u003e\n      \u003cxs:element ref=\"note\" minOccurs=\"0\"/\u003e\n      \u003cxs:element ref=\"quantity\"/\u003e\n      \u003cxs:element ref=\"price\"/\u003e\n    \u003c/xs:sequence\u003e\n  \u003c/xs:complexType\u003e\n\u003c/xs:element\u003e\n\n\u003cxs:element name=\"shiporder\"\u003e\n  \u003cxs:complexType\u003e\n    \u003cxs:sequence\u003e\n      \u003cxs:element ref=\"orderperson\"/\u003e\n      \u003cxs:element ref=\"shipto\"/\u003e\n      \u003cxs:element ref=\"item\" maxOccurs=\"unbounded\"/\u003e\n    \u003c/xs:sequence\u003e\n    \u003cxs:attribute ref=\"orderid\" use=\"required\"/\u003e\n  \u003c/xs:complexType\u003e\n\u003c/xs:element\u003e\n\n\u003c/xs:schema\u003e\n```\n\n\n\n\n","lastmodified":"2023-09-14T17:34:52.838275534Z","tags":null}}